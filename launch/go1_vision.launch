<?xml version="1.0"?>
<launch>
    <!-- Run the map server -->
    <node name="map_server" pkg="map_server" type="map_server" args="$(find go1_autonomy)/maps/map.yaml"/>

    <!-- Run the A1 TF Tree -->
    <include file="$(find go1_autonomy)/launch/go1_tf_tree.launch"/>
    <!-- Run the Costmap Nodes -->
    <!-- <include file="$(find a1_autonomy)/launch/a1_costmap.launch"/> -->

    <!-- Realsense D435 Camera + Convert Depth to laserscan -->
    <!-- <include file="$(find realsense2_camera)/launch/rs_camera.launch"/>
    <include file="$(find depthimage_to_laserscan)/launch/depth2scan.launch"/> -->

    <node name ="tracker_connection" pkg="tf" type="static_transform_publisher" args="0.0 0.0 0.0 0.0 0.0 0.0 tracker tracker_odom_frame 100" />
    <node name ="camera_connection" pkg="tf" type="static_transform_publisher" args="0.0 0.0 0.0 0.0 0.0 0.0 camera camera_link 100" />

    <!-- Realsense T265 for Odometry -->
    <include file="$(find realsense2_camera)/launch/rs_t265.launch" />

    <!-- 'rplidar' or 'velodyne' -->
    <arg name="lidar" default="rplidar" />

    <group if="$(eval lidar == 'rplidar')">
        <include file="$(find rplidar_ros)/launch/rplidar_a3.launch"/>
    </group>

    <group if="$(eval lidar == 'velodyne')">
        <!-- Launch the Velodyne node-->
        <include file="$(find velodyne_pointcloud)/launch/VLP16_points.launch"/>
        <!-- Launch pcl2laserscan-->
        <node pkg="go1_autonomy" type="pointcloud_to_laserscan" name="pointcloud_to_laserscan" args="--config $(find go1_autonomy)/config/cloud2scan.lua" respawn="true" respawn_delay="2" />
    </group>

    <!-- Lidar Costmap -->
    <!-- <include file="$(find unitree_navigation)/launch/a1_costmap.launch"/> -->

    <!-- FoV Visual Costmap -->
    <!-- <arg name="agent1_pose_topic" default="/global_pose"/>
    <arg name="camera_frame2" default="camera"/>
    <arg name="laser_costmap" default="/costmap_node/costmap/costmap"/>
    <node pkg="visual_perception" type="visible_manager" name="a1_camera_region" output="screen" args="$(arg agent1_pose_topic) $(arg camera_frame2) $(arg laser_costmap)">
        <remap from="/camera_region_map" to="/fov_map"/>
    </node> -->

</launch>
